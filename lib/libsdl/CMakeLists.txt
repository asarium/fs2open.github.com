
IF(WIN32)
	add_library(sdl SHARED IMPORTED GLOBAL)

	set_target_properties(sdl
		PROPERTIES
			IMPORTED_LOCATION "${CMAKE_CURRENT_SOURCE_DIR}/lib/x86/SDL2.dll"
			IMPORTED_IMPLIB "${CMAKE_CURRENT_SOURCE_DIR}/lib/x86/SDL2.lib"
			INTERFACE_INCLUDE_DIRECTORIES "${CMAKE_CURRENT_SOURCE_DIR}/include"
	)

	INSTALL(FILES "${CMAKE_CURRENT_SOURCE_DIR}/lib/x86/SDL2.dll"
			DESTINATION ${BINARY_DESTINATION}
	)

	SET(TARGET_COPY_FILES ${TARGET_COPY_FILES} "${CMAKE_CURRENT_SOURCE_DIR}/lib/x86/SDL2.dll" CACHE INTERNAL "" FORCE)

	SET(SDL_LIBS sdl CACHE INTERNAL "")

	add_library(sdlmain STATIC src/SDL_windows.h src/SDL_windows_main.c)
	set_target_properties(sdlmain PROPERTIES FOLDER "3rdparty")
	target_link_libraries(sdlmain PRIVATE sdl)
ELSE(WIN32)
	# CMake can't check for SDL2 so we'll just use PkgConfig
	INCLUDE(FindPkgConfig)
	INCLUDE(util)

	IF(APPLE)
		PKG_SEARCH_MODULE(SDL2 sdl2)

		IF(NOT SDL2_FOUND)
			MESSAGE(STATUS "SDL not found: Using included SDL libraries")
			SET(FSO_USE_SDL_FRAMEWORK ON) # We ship these for mac
		ENDIF(NOT SDL2_FOUND)
	ELSE(APPLE)
		PKG_SEARCH_MODULE(SDL2 REQUIRED sdl2)
	ENDIF(APPLE)

	IF(FSO_USE_SDL_FRAMEWORK)
		ADD_IMPORTED_LIB(sdl "${FSO_MAC_FRAMEWORKS}/SDL.framework/Headers" "${FSO_MAC_FRAMEWORKS}/SDL.framework/SDL" SHARED)
	ELSE(FSO_USE_SDL_FRAMEWORK)
		PKG_CONFIG_LIB_RESOLVE(SDL2 SDL2_LIB)
		ADD_IMPORTED_LIB(sdl "${SDL2_INCLUDE_DIRS}" "${SDL2_LIB}" SHARED)
	ENDIF(FSO_USE_SDL_FRAMEWORK)

	SET(SDL_LIBS sdl CACHE INTERNAL "")
ENDIF(WIN32)
