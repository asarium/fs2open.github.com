layout (triangles) in;
layout (triangle_strip, max_vertices = 3) out;
uniform mat4 shadow_proj_matrix[4];
in float geoInstance[];
in vec3 geoNormal[];
in vec4 geoTexCoord[];
out vec4 fragPosition;
out vec3 fragNormal;
out vec4 fragTexCoord;
void main(void)
{
	int instanceID = int(geoInstance[0]);
   for(int vert = 0; vert < gl_in.length(); vert++)
	{
		gl_Position = shadow_proj_matrix[instanceID] * gl_in[vert].gl_Position;
		if(gl_Position.z < -1.0)
			gl_Position.z = -1.0;
       fragPosition = gl_in[vert].gl_Position;
		fragNormal = geoNormal[vert];
		fragTexCoord = geoTexCoord[vert];
		gl_Layer = instanceID;

		// Pass clipping values through the shader
		gl_ClipDistance[0] = gl_in[vert].gl_ClipDistance[0];
		gl_ClipDistance[1] = gl_in[vert].gl_ClipDistance[1];

		EmitVertex();
	}
	EndPrimitive();
}
